# user                    www www;  ## Default: nobody

worker_processes        auto;
worker_rlimit_nofile    8192;
error_log               "/opt/bitnami/nginx/logs/error.log";
pid                     "/opt/bitnami/nginx/tmp/nginx.pid";

events {
    worker_connections  8000;
    multi_accept        on;
    use                 epoll;
    epoll_events        512;
    accept_mutex        on;
    accept_mutex_delay  500ms;
}

http {
    client_body_temp_path  "/opt/bitnami/nginx/tmp/client_body" 1 2;
    proxy_temp_path        "/opt/bitnami/nginx/tmp/proxy" 1 2;
    fastcgi_temp_path      "/opt/bitnami/nginx/tmp/fastcgi" 1 2;
    scgi_temp_path         "/opt/bitnami/nginx/tmp/scgi" 1 2;
    uwsgi_temp_path        "/opt/bitnami/nginx/tmp/uwsgi" 1 2;

    # Hide Nginx version information.
    include "snippets/security/server_software_information.conf";

    # Specify media (MIME) types for files.
    include "snippets/media_types/media_types.conf";

    # Set character encodings.
    include "snippets/media_types/character_encodings.conf";

    # Include $http_x_forwarded_for within default format used in log files
    # https://nginx.org/en/docs/http/ngx_http_log_module.html#log_format
    log_format  main '$remote_addr - $remote_user [$time_local] '
                     '"$request" $status  $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    # Log access to this file
    # This is only used when you don't override it on a `server` level
    # Default: logs/access.log combined
    # https://nginx.org/en/docs/http/ngx_http_log_module.html#access_log
    access_log       "/opt/bitnami/nginx/logs/access.log";

    # How long to allow each connection to stay idle.
    # Longer values are better for each individual client, particularly for SSL,
    # but means that worker connections are tied up longer.
    # Default: 75s
    # https://nginx.org/en/docs/http/ngx_http_core_module.html#keepalive_timeout
    keepalive_timeout 20s;

    # Speed up file transfers by using `sendfile()` to copy directly between
    # descriptors rather than using `read()`/`write()``.
    # For performance reasons, on FreeBSD systems w/ ZFS this option should be
    # disabled as ZFS's ARC caches frequently used files in RAM by default.
    # Default: off
    # https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile
    sendfile on;

    # Don't send out partial frames; this increases throughput since TCP frames
    # are filled up before being sent out.
    # Default: off
    # https://nginx.org/en/docs/http/ngx_http_core_module.html#tcp_nopush
    tcp_nopush  on;
    tcp_nodelay off;

    # Enable gzip compression.
    include "snippets/web_performance/compression.conf";

    # Specify file cache expiration.
    include "snippets/web_performance/cache-expiration.conf";

    # Cache open file handles
    # include "snippets/web_performance/cache-file-descriptors.conf";

    # Prevent intermediate caches or proxies
    # include "snippets/web_performance/content_transformation.conf";

    client_max_body_size            80M;
    client_body_in_single_buffer    on;
    client_header_buffer_size       1m;
    keepalive_requests              30;
    send_timeout                    30s;

    # allow the server to close connection on non responding client, this will free up memory
    reset_timedout_connection       on;

    # request timed out -- default 60
    client_body_timeout             10;

    # Optimal variables_hash
    variables_hash_max_size 1024;
    variables_hash_bucket_size 128;

    # Add X-XSS-Protection for HTML documents.
    # snippets/security/x-xss-protection.conf
    map $sent_http_content_type $x_xss_protection {
        #           (1)    (2)
        ~*text/html "1; mode=block";
    }

    # Add X-Frame-Options for HTML documents.
    # snippets/security/x-frame-options.conf
    map $sent_http_content_type $x_frame_options {
        ~*text/html DENY;
    }

    # Add Content-Security-Policy for HTML documents.
    # snippets/security/content-security-policy.conf
    map $sent_http_content_type $content_security_policy {
        ~*text/(html|javascript)|application/pdf|xml "default-src 'self'; base-uri 'none'; form-action 'self'; frame-ancestors 'none'; upgrade-insecure-requests";
    }

    # Add Referrer-Policy for HTML documents.
    # snippets/security/referrer-policy.conf.conf
    map $sent_http_content_type $referrer_policy {
        ~*text/(css|html|javascript)|application\/pdf|xml "strict-origin-when-cross-origin";
    }

    # Add X-UA-Compatible for HTML documents.
    # snippets/internet_explorer/x-ua-compatible.conf
    map $sent_http_content_type $x_ua_compatible {
        ~*text/html "IE=edge";
    }

    # Add Access-Control-Allow-Origin.
    # snippets/cross-origin/requests.conf
    map $sent_http_content_type $cors {
        # Images
        ~*image/ "*";

        # Web fonts
        ~*font/                         "*";
        ~*application/vnd.ms-fontobject "*";
        ~*application/x-font-ttf        "*";
        ~*application/font-woff         "*";
        ~*application/x-font-woff       "*";
        ~*application/font-woff2        "*";
    }

    
    # Include files in the server_blocks folder
    include  "server_blocks/*.conf";

    # HTTP Server
    server {
        # Port to listen on, can also be set in IP:PORT format
        listen  8080;

        include  "bitnami/*.conf";
        
        location /status {
            stub_status on;
            access_log   off;
            allow 127.0.0.1;
            deny all;
        }
    }
}